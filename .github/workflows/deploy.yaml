name: Daily Play Store Upload

on:
#  disabled till needed, will replace with a better entry point
#  schedule:
#    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build-and-upload:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'  # Fetches all submodules recursively

      - name: Debug Identity
        run: |
          echo "Repository Owner: ${{ github.repository_owner }}"
          echo "Full Repository: ${{ github.repository }}"

      - name: 'Authenticate to Google Cloud'
        id: auth
        uses: 'google-github-actions/auth@v2.1.1'
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          project_id: 'bizclikevents'
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
          create_credentials_file: 'true'
          token_format: access_token

      - name: Debug credentials file
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=${{ steps.auth.outputs.credentials_file_path }}"

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: .github/workflows/scripts
        run: |
          npm init -y
          npm install googleapis google-auth-library


      - name: Verify submodules
        run: |
          git submodule status
          git submodule update --init --recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Debug token
        run: gcloud auth print-access-token

      - name: Build Release Bundle
        run: ./gradlew :composeApp:bundleRelease

      - name: Verify AAB exists
        run: |
          ls -la composeApp/build/outputs/bundle/release/
          echo "Checking if AAB exists..."
          if [ -f "composeApp/build/outputs/bundle/release/composeApp-release.aab" ]; then
            echo "AAB file found"
          else
            echo "AAB file not found"
            exit 1
          fi

      - name: Decode keystore
        run: |
          echo "${{ secrets.UPLOAD_KEYSTORE_BASE64 }}" | base64 -d > upload-key.jks

      - name: Sign AAB
        run: |
          jarsigner \
            -verbose \
            -sigalg SHA256withRSA \
            -digestalg SHA-256 \
            -keystore upload-key.jks \
            -storepass ${{ secrets.UPLOAD_KEYSTORE_PASSWORD }} \
            -keypass ${{ secrets.UPLOAD_KEY_PASSWORD }} \
            ./composeApp/build/outputs/bundle/release/composeApp-release.aab \
            ${{ secrets.UPLOAD_KEY_ALIAS }}

      - name: Upload to Play Store
        env:
          PACKAGE_NAME: 'ship.f.project.x.client'
          AAB_PATH: 'composeApp/build/outputs/bundle/release/composeApp-release.aab'
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
        working-directory: .github/workflows/scripts
        run: node upload-to-play-store.js
